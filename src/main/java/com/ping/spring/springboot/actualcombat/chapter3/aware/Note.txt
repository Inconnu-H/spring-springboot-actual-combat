Spring的依赖注入的最大亮点就是你所有的Bean对Spring容器的存在时没有意识的。即你可以将你的容器替换成别的容器，如Google Guice，这是Bean之间的耦合度很低。
但是在实际项目中，你不可避免的要用到Spring容器本身的功能资源，这是你的Bean必须要意识到Spring容器的存在，才能调用Spring所提供的资源，这就是所谓的Spring Aware。其实Spring Aware本来就是Spring设计用来框架内部使用的，若使用了Spring Aware，你的Bean将会和Spring框架耦合。
Spring提供的Aware接口如下所示：
    BeanNameAware                       获得到容器中Bean的名称
    BeanFactoryAware                    获得当前bean factory，这样可以调用容器的服务
    ApplicationContextAware             当前的application context，这样可以调用容器的服务，该接口集成了以下三个接口
    MessageSourceAware                  获得message source，这样可以获得文本信息
    ApplicationEventPublisherAware      应用事件发布器，可以发布事件，2.5节的DemoPublisher也可以实现这个接口来发布事件
    ResourceLoaderAware                 获得资源加载器，可以获得外部资源文件
Spring Aware的目的是为了让Bean获得Spring容器的服务。